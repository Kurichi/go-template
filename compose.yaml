services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${HOST_PORT:?err}:${PORT:?err}'
    env_file:
      - .env
    volumes:
      - .:/go/src/app
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:?err}/health"]
      interval: 1s
      timeout: 3s
      retries: 30

  db:
    image: postgres
    restart: always
    hostname: ${DB_HOST:?err}
    expose:
      - '${DB_PORT:?err}'
    environment:
      - POSTGRES_USER=${DB_USER:?err}
      - POSTGRES_PASSWORD=${DB_PASSWORD:?err}
      - POSTGRES_HOST=${DB_HOST:?err}
      - POSTGRES_DB=${DB_NAME:?err}
      - POSTGRES_PORT=${DB_PORT:?err}
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USER:?err}", "-d", "${DB_NAME:?err}"]
      interval: 1s
      timeout: 3s
      retries: 30

volumes:
  dbdata: null
